
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    client_max_body_size 10m; # Limita o tamanho máximo do corpo da solicitação para 10 MB
    client_body_buffer_size 128k; # Define o tamanho máximo do buffer de corpo da solicitação
    client_header_buffer_size 1k; # Define o tamanho máximo do buffer de cabeçalho da solicitação
    large_client_header_buffers 4 4k; # Define o número e o tamanho máximo dos buffers de cabeçalho da solicitação
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
    #remover o cabeçalho com a versao do nginx
    server_tokens off;
    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    #customizar um formato de log
    log_format meu_formato '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
    #gzip  on;
    # Configuração global do rate limiting
    limit_req_zone $binary_remote_addr zone=one:10m rate=1r/s;
    #novo bloco server para configurar o reverse proxy
    server {
        listen 70;
        server_name localhost;

        location / {
            proxy_pass http://localhost:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    server {
        listen       8080;
        server_name  localhost;

        #charset koi8-r;
    #customizar a tela de erro do nginx, pois a padrao tem a versao do nginx
    error_page 404 /404.html;
    location = /404.html {
        internal;
    }
    #onde os logs vao ser registrados.
    access_log C:\Users\xandy\OneDrive\Documentos\GitHub\social-link-profile\logs/access.log meu_formato;
    error_log C:\Users\xandy\OneDrive\Documentos\GitHub\social-link-profile\logs/error.log;
    #access_log  logs/host.access.log  main;
	# Redireciona todas as requisições HTTP para HTTPS
    	return 301 https://$server_name$request_uri;
        location / {
            root   html;
            index  index.html index.htm;
	    # Aplica o rate limiting
	    limit_req zone=one burst=5;
	    # verificar injecao de sql
	    if ($query_string ~* "(<|%3C).*script.*(>|%3E)|sql") {
                return 403;
            }
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;
	
        #ssl_certificate      certificado.crt;
        #ssl_certificate_key  chave_privada.key;
	# Ativação do HSTS
	#add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

#        ssl_session_cache    shared:SSL:1m;
#        ssl_session_timeout  5m;

#        ssl_ciphers  "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
#        ssl_prefer_server_ciphers  on;
#	ssl_protocols TLSv1.2;
	#filtragem de ip
#	allow 192.168.1.1;
 #       allow 10.0.0.0/24;
  #      deny all;

#        location / {
#            root   html;
#            index  index.html index.htm;
	    #CSP
	    #add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self'; font-src 'self'; frame-src 'none'; object-src 'none'";
        #}
#    }

}
